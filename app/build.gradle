apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"

        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //base
    implementation rootProject.ext.dependencies["appcompat-v4"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["cardview-v7"]

    //rx
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
    //network
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    compile rootProject.ext.dependencies["retrofit-converter-scalars"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttp-logging-interceptor"]

    //di
    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    provided rootProject.ext.dependencies["annotation"]
    //glide
    compile rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    compile rootProject.ext.dependencies["glide-okhttp3-integration"]
    implementation rootProject.ext.dependencies["glide-transformations"]
    //
    compile rootProject.ext.dependencies["fragmentation"]
    compile rootProject.ext.dependencies["fragmentation-swipeback"]
    compile rootProject.ext.dependencies["fragmentation-eventbus-activity"]

    compile rootProject.ext.dependencies["eventbus"]
    //other
    implementation rootProject.ext.dependencies["qiaoUtils"]

    //ui
    implementation rootProject.ext.dependencies["FlycoTabLayout_Lib"]
    implementation rootProject.ext.dependencies["springview"]
    compile rootProject.ext.dependencies["agentweb-agentweb"]
    compile rootProject.ext.dependencies["agentweb-download"]
    compile rootProject.ext.dependencies["agentweb-filechooser"]
    compile rootProject.ext.dependencies["tkrefreshlayout"]
}
